{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: gensim in /opt/anaconda3/lib/python3.7/site-packages (3.8.3)\n",
      "Requirement already satisfied: six>=1.5.0 in /opt/anaconda3/lib/python3.7/site-packages (from gensim) (1.14.0)\n",
      "Requirement already satisfied: numpy>=1.11.3 in /opt/anaconda3/lib/python3.7/site-packages (from gensim) (1.20.1)\n",
      "Requirement already satisfied: smart-open>=1.8.1 in /opt/anaconda3/lib/python3.7/site-packages (from gensim) (4.2.0)\n",
      "Requirement already satisfied: scipy>=0.18.1 in /opt/anaconda3/lib/python3.7/site-packages (from gensim) (1.4.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install gensim"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ключевые слова из всего текста"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('heron', 0.45967342500183983), ('abandoned', 0.28389694186915587), ('animal', 0.28389694186915565), ('work tracking', 0.23997361825060792), ('step', 0.1945219786881261), ('norm', 0.19452197868812562), ('poked', 0.19452197868812562), ('thinking', 0.19452197868812543)]\n"
     ]
    }
   ],
   "source": [
    "from gensim.summarization import keywords\n",
    "\n",
    "text = \"\"\"\n",
    "The only person I have ever met who died as a result of a wild\n",
    "animal attack was killed by a blue heron. His name was Norm. He\n",
    "was a friend of my step-mom. They were both ornithologists, she\n",
    "worked in education, he did field work tracking bird populations.\n",
    "He was tracking heron populations down in the Everglades and saw a\n",
    "blue heron fly into a long abandoned barn out in the swamps.\n",
    "Thinking there might be a nest inside, he decided to check it out.\n",
    "He realized the heron had built a nest in the loft of the barn and\n",
    "climbed up a ladder to check it out.\n",
    "Turned out the nest was right next to trapdoor for the ladder, and\n",
    "when Norm poked his head up to take a look, the heron pecked at\n",
    "him. Hit him once, right in the temple, and killed him instantly.\n",
    "\"\"\"\n",
    "\n",
    "print(keywords(text,words = 10,scores = True, lemmatize = True))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ключевые слова из корпуса"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['abandoned', 'and', 'animal', 'as', 'at', 'attack', 'barn', 'be', 'bird', 'blue', 'both', 'built', 'by', 'check', 'climbed', 'decided', 'did', 'died', 'down', 'education', 'ever', 'everglades', 'field', 'fly', 'for', 'friend', 'had', 'have', 'he', 'head', 'heron', 'him', 'his', 'hit', 'in', 'inside', 'instantly', 'into', 'it', 'killed', 'ladder', 'loft', 'long', 'look', 'met', 'might', 'mom', 'my', 'name', 'nest', 'next', 'norm', 'of', 'once', 'only', 'ornithologists', 'out', 'pecked', 'person', 'poked', 'populations', 'realized', 'result', 'right', 'saw', 'she', 'step', 'swamps', 'take', 'temple', 'the', 'there', 'they', 'thinking', 'to', 'tracking', 'trapdoor', 'turned', 'up', 'was', 'were', 'when', 'who', 'wild', 'work', 'worked']\n"
     ]
    }
   ],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "corpus = [\n",
    "    \"\"\"\n",
    "The only person I have ever met who died as a result of a wild\n",
    "animal attack was killed by a blue heron. His name was Norm. He\n",
    "was a friend of my step-mom. They were both ornithologists, she\n",
    "worked in education, he did field work tracking bird populations.\n",
    "He was tracking heron populations down in the Everglades and saw a\n",
    "blue heron fly into a long abandoned barn out in the swamps.\n",
    "Thinking there might be a nest inside, he decided to check it out.\n",
    "He realized the heron had built a nest in the loft of the barn and\n",
    "climbed up a ladder to check it out.\n",
    "Turned out the nest was right next to trapdoor for the ladder, and\n",
    "when Norm poked his head up to take a look, the heron pecked at\n",
    "him. Hit him once, right in the temple, and killed him instantly.\n",
    "\"\"\"\n",
    "]\n",
    "vectorizer = TfidfVectorizer()\n",
    "X = vectorizer.fit_transform(corpus)\n",
    "print(vectorizer.get_feature_names())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "text_1 = \"\"\"\n",
    "The only person I have ever met who died as a result of a wild\n",
    "animal attack was killed by a blue heron. His name was Norm. He\n",
    "was a friend of my step-mom. They were both ornithologists, she\n",
    "worked in education, he did field work tracking bird populations.\n",
    "He was tracking heron populations down in the Everglades and saw a\n",
    "blue heron fly into a long abandoned barn out in the swamps.\n",
    "Thinking there might be a nest inside, he decided to check it out.\n",
    "He realized the heron had built a nest in the loft of the barn and\n",
    "climbed up a ladder to check it out.\n",
    "Turned out the nest was right next to trapdoor for the ladder, and\n",
    "when Norm poked his head up to take a look, the heron pecked at\n",
    "him. Hit him once, right in the temple, and killed him instantly.\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package wordnet to\n",
      "[nltk_data]     /Users/ernandesmaria/nltk_data...\n",
      "[nltk_data]   Package wordnet is already up-to-date!\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('post', 1.4392949726265691), ('articl', 1.4754236967150747), ('host', 1.7035965964342865), ('nntp', 1.7248288165400607), ('think', 1.8287597393882924), ('peopl', 1.887600239411226), ('know', 1.994083719813676), ('univers', 1.994083719813676), ('atheist', 2.011081296182247), ('like', 2.016811970891232), ('thing', 2.094462905121298), ('time', 2.199133527685187), ('mean', 2.2271073797275927), ('believ', 2.2705924916673315), ('keith', 2.2855181418840074), ('world', 2.3718462253725043), ('point', 2.3883755273237153), ('reason', 2.3883755273237153), ('moral', 2.4573683988106665), ('christian', 2.466337068793427), ('read', 2.475386904313345), ('right', 2.475386904313345), ('come', 2.4845193878766176), ('islam', 2.512428175993694), ('exist', 2.521906919948238), ('case', 2.5314763709643886), ('good', 2.5807474199711713), ('word', 2.5807474199711713), ('sure', 2.5908997914351892), ('caltech', 2.6011562916023783), ('religion', 2.6011562916023783), ('claim', 2.6219903785052203), ('polit', 2.6219903785052203), ('atheism', 2.6432677769525053), ('fact', 2.6650077635889113), ('possibl', 2.6650077635889113), ('schneider', 2.6650077635889113), ('allan', 2.6985304556275547), ('exampl', 2.7215199738522537), ('question', 2.7215199738522537), ('tell', 2.7215199738522537), ('state', 2.7450504712624477), ('human', 2.7570266623091633), ('person', 2.7570266623091633), ('want', 2.7570266623091633), ('agre', 2.769148022841508), ('caus', 2.769148022841508), ('certain', 2.769148022841508), ('follow', 2.79384063543188), ('true', 2.79384063543188), ('differ', 2.8064194176387396), ('argument', 2.8191584434161694), ('look', 2.8191584434161694), ('consid', 2.8320618482520774), ('understand', 2.8320618482520774), ('group', 2.84513392981943), ('littl', 2.84513392981943), ('repli', 2.84513392981943), ('actual', 2.858379156569451), ('natur', 2.858379156569451), ('punish', 2.858379156569451), ('wrong', 2.858379156569451), ('accept', 2.8718021769015913), ('technolog', 2.8718021769015913), ('evid', 2.88540782895737), ('year', 2.88540782895737), ('cours', 2.9131873930644456), ('life', 2.9131873930644456), ('long', 2.9131873930644456), ('religi', 2.9131873930644456), ('need', 2.927372028056402), ('statement', 2.927372028056402), ('talk', 2.927372028056402), ('california', 2.941760765508502), ('problem', 2.941760765508502), ('start', 2.941760765508502), ('distribut', 2.956359564929654), ('institut', 2.956359564929654), ('work', 2.986212528079336), ('belief', 3.0014800002101243), ('better', 3.0014800002101243), ('bibl', 3.0014800002101243), ('livesey', 3.0014800002101243), ('object', 3.0014800002101243), ('opinion', 3.0014800002101243), ('kill', 3.016984186746089), ('solntz', 3.0327325437142285), ('book', 3.0487328850606694), ('issu', 3.0487328850606694), ('robert', 3.0487328850606694), ('base', 3.0649934059324497), ('explain', 3.0649934059324497), ('general', 3.0649934059324497), ('refer', 3.0649934059324497), ('sens', 3.0649934059324497), ('definit', 3.0815227078836607), ('tri', 3.0815227078836607), ('origin', 3.098329826200042), ('author', 3.1154242595593415), ('clear', 3.1154242595593415), ('defin', 3.1154242595593415), ('live', 3.1154242595593415), ('pasadena', 3.1154242595593415), ('rule', 3.1154242595593415), ('support', 3.1154242595593415), ('delet', 3.132816002271211), ('idea', 3.132816002271211), ('mind', 3.150515579370612), ('view', 3.150515579370612), ('assum', 3.1685340848732904), ('hear', 3.1685340848732904), ('posit', 3.1685340848732904), ('probabl', 3.1685340848732904), ('logic', 3.1868832235414866), ('obvious', 3.1868832235414866), ('away', 3.2055753565536396), ('free', 3.224623551524334), ('muslim', 3.224623551524334), ('allow', 3.2440416373814354), ('discuss', 3.2440416373814354), ('version', 3.2440416373814354), ('note', 3.263844264677615), ('scienc', 3.263844264677615), ('hold', 3.2840469719951346), ('includ', 3.2840469719951346), ('news', 3.2840469719951346), ('simpli', 3.2840469719951346), ('jesus', 3.3046662591978704), ('particular', 3.3046662591978704), ('requir', 3.3046662591978704), ('suppos', 3.3046662591978704), ('contradict', 3.3257196683957027), ('creat', 3.3257196683957027), ('great', 3.3257196683957027), ('leav', 3.3257196683957027), ('real', 3.3257196683957027), ('ryan', 3.3257196683957027), ('similar', 3.3257196683957027), ('argu', 3.3472258736166665), ('death', 3.3472258736166665), ('ignor', 3.3472258736166665), ('matter', 3.3472258736166665), ('societi', 3.3472258736166665), ('appli', 3.3692047803354415), ('benedikt', 3.3692047803354415), ('care', 3.3692047803354415), ('cwru', 3.3692047803354415), ('doubt', 3.3692047803354415), ('hope', 3.3692047803354415), ('physic', 3.3692047803354415), ('rushdi', 3.3692047803354415), ('answer', 3.3916776361875), ('chang', 3.3916776361875), ('mention', 3.3916776361875), ('mozumd', 3.3916776361875), ('present', 3.3916776361875), ('action', 3.4146671544121987), ('exact', 3.4146671544121987), ('hard', 3.4146671544121987), ('john', 3.4146671544121987), ('wouldn', 3.4146671544121987), ('correct', 3.4381976518223927), ('effect', 3.4381976518223927), ('quot', 3.4381976518223927), ('rosenau', 3.4381976518223927), ('date', 3.4622952034014536), ('feel', 3.4622952034014536), ('germani', 3.4622952034014536), ('histori', 3.4622952034014536), ('newsread', 3.4622952034014536), ('place', 3.4622952034014536), ('relat', 3.4622952034014536), ('abl', 3.486987815991825), ('close', 3.486987815991825), ('gregg', 3.486987815991825), ('hand', 3.486987815991825), ('help', 3.486987815991825), ('jaeger', 3.486987815991825), ('level', 3.486987815991825), ('order', 3.486987815991825), ('provid', 3.486987815991825), ('respons', 3.486987815991825), ('term', 3.486987815991825), ('buphi', 3.512305623976115), ('entir', 3.512305623976115), ('form', 3.512305623976115), ('guess', 3.512305623976115), ('happen', 3.512305623976115), ('impli', 3.512305623976115), ('interpret', 3.512305623976115), ('pretti', 3.512305623976115), ('thought', 3.512305623976115), ('bobbi', 3.5382811103793754), ('strong', 3.5382811103793754), ('accord', 3.5649493574615367), ('admit', 3.5649493574615367), ('attempt', 3.5649493574615367), ('dbstu', 3.5649493574615367), ('fall', 3.5649493574615367), ('import', 3.5649493574615367), ('knowledg', 3.5649493574615367), ('love', 3.5649493574615367), ('manti', 3.5649493574615367), ('mathew', 3.5649493574615367), ('mayb', 3.5649493574615367), ('perfect', 3.5649493574615367), ('sorri', 3.5649493574615367), ('theist', 3.5649493574615367), ('valu', 3.5649493574615367), ('vice', 3.5649493574615367), ('western', 3.5649493574615367), ('beauchain', 3.592348331649651), ('best', 3.592348331649651), ('bobb', 3.592348331649651), ('david', 3.592348331649651), ('direct', 3.592348331649651), ('power', 3.592348331649651), ('rest', 3.592348331649651), ('sort', 3.592348331649651), ('speak', 3.592348331649651), ('wish', 3.592348331649651), ('wonder', 3.592348331649651), ('activ', 3.6205192086163476), ('appl', 3.6205192086163476), ('commit', 3.6205192086163476), ('decid', 3.6205192086163476), ('fals', 3.6205192086163476), ('murder', 3.6205192086163476), ('purpos', 3.6205192086163476), ('rice', 3.6205192086163476), ('stay', 3.6205192086163476), ('truth', 3.6205192086163476), ('andrew', 3.6495067454896), ('aren', 3.6495067454896), ('basi', 3.6495067454896), ('basic', 3.6495067454896), ('countri', 3.6495067454896), ('number', 3.6495067454896), ('prove', 3.6495067454896), ('respect', 3.6495067454896), ('second', 3.6495067454896), ('social', 3.6495067454896), ('technic', 3.6495067454896), ('complet', 3.679359708639281), ('earth', 3.679359708639281), ('faith', 3.679359708639281), ('god', 3.679359708639281), ('law', 3.679359708639281), ('necessarili', 3.679359708639281), ('sound', 3.679359708639281), ('standard', 3.679359708639281), ('ultb', 3.679359708639281), ('altern', 3.7101313673060345), ('american', 3.7101313673060345), ('ask', 3.7101313673060345), ('bear', 3.7101313673060345), ('fred', 3.7101313673060345), ('happi', 3.7101313673060345), ('haven', 3.7101313673060345), ('rememb', 3.7101313673060345), ('student', 3.7101313673060345), ('usual', 3.7101313673060345), ('wors', 3.7101313673060345), ('absolut', 3.741880065620615), ('behavior', 3.741880065620615), ('charley', 3.741880065620615), ('lack', 3.741880065620615), ('result', 3.741880065620615), ('satan', 3.741880065620615), ('saturn', 3.741880065620615), ('suggest', 3.741880065620615), ('wingat', 3.741880065620615), ('women', 3.741880065620615), ('common', 3.774669888443606), ('concern', 3.774669888443606), ('conner', 3.774669888443606), ('jam', 3.774669888443606), ('practic', 3.774669888443606), ('thread', 3.774669888443606), ('valid', 3.774669888443606), ('weak', 3.774669888443606), ('anim', 3.808571440119287), ('comment', 3.808571440119287), ('concept', 3.808571440119287), ('consequ', 3.808571440119287), ('convinc', 3.808571440119287), ('frank', 3.808571440119287), ('genocid', 3.808571440119287), ('instanc', 3.808571440119287), ('judg', 3.808571440119287), ('list', 3.808571440119287), ('major', 3.808571440119287), ('monash', 3.808571440119287), ('newton', 3.808571440119287), ('okcforum', 3.808571440119287), ('osrh', 3.808571440119287), ('situat', 3.808571440119287), ('surviv', 3.808571440119287), ('teach', 3.808571440119287), ('assumpt', 3.8436627599305573), ('blow', 3.8436627599305573), ('daric', 3.8436627599305573), ('depart', 3.8436627599305573), ('determin', 3.8436627599305573), ('especi', 3.8436627599305573), ('event', 3.8436627599305573), ('expect', 3.8436627599305573), ('fair', 3.8436627599305573), ('forc', 3.8436627599305573), ('inform', 3.8436627599305573), ('kent', 3.8436627599305573), ('kind', 3.8436627599305573), ('learn', 3.8436627599305573), ('mango', 3.8436627599305573), ('motiv', 3.8436627599305573), ('necessari', 3.8436627599305573), ('principl', 3.8436627599305573), ('speci', 3.8436627599305573), ('specif', 3.8436627599305573), ('spend', 3.8436627599305573), ('stori', 3.8436627599305573), ('stuff', 3.8436627599305573), ('theori', 3.8436627599305573), ('turn', 3.8436627599305573), ('unix', 3.8436627599305573), ('use', 3.8436627599305573), ('wasn', 3.8436627599305573), ('yoyo', 3.8436627599305573), ('account', 3.880030404101432), ('chanc', 3.880030404101432), ('contain', 3.880030404101432), ('disclaim', 3.880030404101432), ('evil', 3.880030404101432), ('imagin', 3.880030404101432), ('innoc', 3.880030404101432), ('lead', 3.880030404101432), ('member', 3.880030404101432), ('messag', 3.880030404101432), ('nation', 3.880030404101432), ('open', 3.880030404101432), ('poor', 3.880030404101432), ('poster', 3.880030404101432), ('public', 3.880030404101432), ('reject', 3.880030404101432), ('sandvik', 3.880030404101432), ('self', 3.880030404101432), ('batman', 3.917770732084279), ('centuri', 3.917770732084279), ('cheer', 3.917770732084279), ('conclus', 3.917770732084279), ('experi', 3.917770732084279), ('fido', 3.917770732084279), ('individu', 3.917770732084279), ('inimit', 3.917770732084279), ('legal', 3.917770732084279), ('mark', 3.917770732084279), ('process', 3.917770732084279), ('stop', 3.917770732084279), ('suffer', 3.917770732084279), ('text', 3.917770732084279), ('today', 3.917770732084279), ('user', 3.917770732084279), ('ancient', 3.9569914452375605), ('appear', 3.9569914452375605), ('choic', 3.9569914452375605), ('church', 3.9569914452375605), ('colleg', 3.9569914452375605), ('compar', 3.9569914452375605), ('consist', 3.9569914452375605), ('couldn', 3.9569914452375605), ('describ', 3.9569914452375605), ('evolut', 3.9569914452375605), ('intend', 3.9569914452375605), ('jbrown', 3.9569914452375605), ('larg', 3.9569914452375605), ('mistak', 3.9569914452375605), ('peac', 3.9569914452375605), ('penalti', 3.9569914452375605), ('popul', 3.9569914452375605), ('privat', 3.9569914452375605), ('rais', 3.9569914452375605), ('regard', 3.9569914452375605), ('reserv', 3.9569914452375605), ('school', 3.9569914452375605), ('thank', 3.9569914452375605), ('attack', 3.997813439757816), ('braunschweig', 3.997813439757816), ('bring', 3.997813439757816), ('choos', 3.997813439757816), ('continu', 3.997813439757816), ('deal', 3.997813439757816), ('die', 3.997813439757816), ('draw', 3.997813439757816), ('error', 3.997813439757816), ('head', 3.997813439757816), ('high', 3.997813439757816), ('justifi', 3.997813439757816), ('notion', 3.997813439757816), ('recent', 3.997813439757816), ('respond', 3.997813439757816), ('save', 3.997813439757816), ('small', 3.997813439757816), ('wit', 3.997813439757816), ('abil', 4.040373054176611), ('appar', 4.040373054176611), ('begin', 4.040373054176611), ('build', 4.040373054176611), ('control', 4.040373054176611), ('immor', 4.040373054176611), ('local', 4.040373054176611), ('mere', 4.040373054176611), ('nice', 4.040373054176611), ('occur', 4.040373054176611), ('past', 4.040373054176611), ('queen', 4.040373054176611), ('scientif', 4.040373054176611), ('type', 4.040373054176611), ('anti', 4.084824816747446), ('assert', 4.084824816747446), ('australia', 4.084824816747446), ('beaverton', 4.084824816747446), ('bronx', 4.084824816747446), ('carri', 4.084824816747446), ('copi', 4.084824816747446), ('coupl', 4.084824816747446), ('dwyer', 4.084824816747446), ('earlier', 4.084824816747446), ('east', 4.084824816747446), ('etern', 4.084824816747446), ('face', 4.084824816747446), ('fine', 4.084824816747446), ('govern', 4.084824816747446), ('harm', 4.084824816747446), ('instead', 4.084824816747446), ('intent', 4.084824816747446), ('later', 4.084824816747446), ('manhattan', 4.084824816747446), ('measur', 4.084824816747446), ('miss', 4.084824816747446), ('monu', 4.084824816747446), ('notic', 4.084824816747446), ('realiti', 4.084824816747446), ('relev', 4.084824816747446), ('remov', 4.084824816747446), ('simpl', 4.084824816747446), ('sink', 4.084824816747446), ('tektronix', 4.084824816747446), ('total', 4.084824816747446), ('uucp', 4.084824816747446), ('agnost', 4.131344832382338), ('analog', 4.131344832382338), ('brother', 4.131344832382338), ('crime', 4.131344832382338), ('depend', 4.131344832382338), ('earli', 4.131344832382338), ('engin', 4.131344832382338), ('freedom', 4.131344832382338), ('independ', 4.131344832382338), ('involv', 4.131344832382338), ('irrelev', 4.131344832382338), ('jew', 4.131344832382338), ('khan', 4.131344832382338), ('languag', 4.131344832382338), ('liar', 4.131344832382338), ('marriag', 4.131344832382338), ('observ', 4.131344832382338), ('play', 4.131344832382338), ('proof', 4.131344832382338), ('reader', 4.131344832382338), ('recogn', 4.131344832382338), ('rusnew', 4.131344832382338), ('tradit', 4.131344832382338), ('translat', 4.131344832382338), ('trust', 4.131344832382338), ('vers', 4.131344832382338), ('violat', 4.131344832382338), ('weren', 4.131344832382338)]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/sklearn/feature_extraction/text.py:386: UserWarning: Your stop_words may be inconsistent with your preprocessing. Tokenizing the stop words generated tokens ['b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y'] not in stop_words.\n",
      "  'stop_words.' % sorted(inconsistent))\n"
     ]
    }
   ],
   "source": [
    "import gensim\n",
    "from gensim.utils import simple_preprocess\n",
    "from gensim.parsing.preprocessing import STOPWORDS\n",
    "from nltk.stem import WordNetLemmatizer, SnowballStemmer\n",
    "from nltk.stem.porter import *\n",
    "import nltk\n",
    "nltk.download('wordnet')\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "\n",
    "## our dataset\n",
    "from sklearn.datasets import fetch_20newsgroups\n",
    "newsgroups_train = fetch_20newsgroups(subset='train' , shuffle = True , categories =  [ \"alt.atheism\" ])\n",
    "## defining a stemmer to use\n",
    "stemmer = SnowballStemmer(\"english\")\n",
    "\n",
    "## this dictiaoniary will come in handy later on ..\n",
    "stemmed_to_original = {}\n",
    "\n",
    "## Basic Preprocessings Functions ##\n",
    "def lemmatize_stemming(text):\n",
    "    return stemmer.stem(WordNetLemmatizer().lemmatize(text, pos='v'))\n",
    "\n",
    "def preprocess(text):\n",
    "    result=[]\n",
    "    for token in gensim.utils.simple_preprocess(text) :\n",
    "\n",
    "        if token not in gensim.parsing.preprocessing.STOPWORDS and len(token) > 3:\n",
    "            stemmed_token = lemmatize_stemming(token)\n",
    "            stemmed_to_original[stemmed_token] = token\n",
    "            result.append(stemmed_token)\n",
    "            \n",
    "    return result\n",
    "\n",
    "\n",
    "news_data = [ preprocess(i) for i in newsgroups_train.data  ]\n",
    "## notice, min_df and max_df parameters are really important in getting the most important keywords out of your corpus\n",
    "vectorizer = TfidfVectorizer(   stop_words= gensim.parsing.preprocessing.STOPWORDS , min_df = 20 , max_df = 0.72, tokenizer= lambda x : x , lowercase= False   )\n",
    "vectorizer.fit_transform( news_data  )\n",
    "\n",
    "## get idf values of all the corresponding tokens used by vectorizer and sort them in ascending order\n",
    "## Depends on how you define it, but for most of cases while working in text corpus,  after unnecessary stopwords and  ( really high / really rare ) frequent words have been filtered out\n",
    "## by parameters we used in our vectorizer above,  this type of sorting gets you important keywords\n",
    "\n",
    "## make a dictionairy of words and corresponding idf weight\n",
    "word_to_idf = {  i:j for i,j in zip(vectorizer.get_feature_names() , vectorizer.idf_ ) }\n",
    "## sort the dictionairy in ascending order of idf weights\n",
    "word_to_idf = sorted(   word_to_idf.items() ,key = lambda x : x[1]  ,  reverse = False )\n",
    "print(word_to_idf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
